/*
 *    Created by: Andrew O'Shei
 * 
 *    Various functions to write and retrieve data from SD Card Reader
 * 
 */

#include "data_writer.h"

int id = 1;

// Check if SD Card is available
bool setupSDCard() {
  if (!SD.begin()) {
    return false;
  }
  
  uint8_t cardType = SD.cardType();
  if (cardType == CARD_NONE) {
    return false;
  }
  return true;
}



bool createDir(const char * path){
    Serial.printf("Creating Dir: %s\n", path);
    if(SD.mkdir(path)){
        return true;
    }
    return false;
}


bool checkPathExists(const char * path) {
  if (SD.exists(path)) {
    return true;    
  }
  return false;
}


void readFile(const char * path){
    Serial.printf("Reading file: %s\n", path);

    File file = SD.open(path);
    if(!file){
        Serial.println("Failed to open file for reading");
        return;
    }

    Serial.print("Read from file: ");
    while(file.available()){
        Serial.write(file.read());
    }
    file.close();
}

bool writeFile(const char * path, String message){
    File file = SD.open(path, FILE_WRITE);
    if(!file.print(message)){
      return false;
    }
    file.close();
    return true;
}

void appendFile(const char * path, String message){
    Serial.printf("Appending to file: %s\n", path);

    File file = SD.open(path, FILE_APPEND);
    if(!file){
        Serial.println("Failed to open file for appending");
        return;
    }
    if(file.print(message)){
        Serial.println("Message appended");
    } else {
        Serial.println("Append failed");
    }
    file.close();
}


void deleteFile(const char * path) {
    if(SD.remove(path)){
        Serial.println("File deleted");
    } else {
        Serial.println("Delete failed");
    }
}


void addDeviceEntry(String btName, String btAddress, uint32_t btClass) {
  DynamicJsonDocument doc(1024);

  doc[(String)id]["name"] = btName;
  doc[(String)id]["mac"] = btAddress;
  doc[(String)id]["cod"] = btClass;

  String outputJson;
  serializeJsonPretty(doc, outputJson); 

  String writeOut;
  if (id > 1) {
    writeOut = ",\n" + outputJson;
  } else {
    writeOut = outputJson;
  }

  id += 1;
  Serial.println("JSON Message: ");
  Serial.println(outputJson);

  appendFile("/Bluetooth_Data/BT_Devices.json", writeOut);
}

void resetID() {
  id = 1;
}
